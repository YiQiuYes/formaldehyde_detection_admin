name: ReleaseDistribute

on:
  workflow_dispatch:
    inputs:
      version:
        description: 版本号
        default: '1.0.0'
        required: true
        type: string
env:
  FLUTTER_VERSION: '3.29.2'
  APP_NAME: 'formaldehyde_detection_admin'

permissions: write-all

jobs:
  job_v:
    name: 构建版本号
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        with:
          disable-autolabeler: true # 禁止自动标签
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  job_apk:
    needs: job_v
    name: 构建android软件
    runs-on: ubuntu-latest
    env:
      version: ${{ inputs.version }}
      ALIAS: ${{ secrets.ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 修改版本号
        run: |
          sed -i "s/version: .*/version: ${{ env.version }}+1/" pubspec.yaml
      - name: 编译环境设置 Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: 构建签名环境
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
      - name: 设置flutter编译环境
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION  }}
      - name: 执行编译命令分架构
        run: |
          flutter pub get
          flutter build apk --release --target-platform=android-arm,android-arm64 --split-per-abi
      - name: 重命名文件
        run: |
          mv build/app/outputs/apk/release/app-armeabi-v7a-release.apk build/app/outputs/apk/release/{{ env.APP_NAME }}-android-armeabi-v7a-${{ env.version }}.apk
          mv build/app/outputs/apk/release/app-arm64-v8a-release.apk build/app/outputs/apk/release/{{ env.APP_NAME }}-android-arm64-v8a-${{ env.version }}.apk
      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: android-split
          path: build/app/outputs/apk/release/{{ env.APP_NAME }}-android-*-${{ env.version }}.apk
      - name: 执行编译命令全架构
        run: |
          flutter pub get
          flutter build apk --release --target-platform=android-arm,android-arm64
      - name: 重命名文件
        run: mv build/app/outputs/apk/release/app-release.apk build/app/outputs/apk/release/{{ env.APP_NAME }}-android-all-${{ env.version }}.apk
      - name: 上传产物全架构
        uses: actions/upload-artifact@v4
        with:
          name: android-all
          path: build/app/outputs/apk/release/{{ env.APP_NAME }}-android-all-${{ env.version }}.apk

  job_ipa:
    needs: job_v
    name: 构建ios软件
    runs-on: macos-latest
    env:
      version: ${{ inputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 修改版本号
        run: |
          sed -i "" "s/version: .*/version: ${{ env.version }}+1/" pubspec.yaml
      - name: 编译环境设置
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION  }}
      - name: Build (ios)
        run: |
          flutter pub get
          flutter build ipa --release --no-codesign
          cd build/ios/archive/Runner.xcarchive/Products/Applications
          mkdir -p Payload
          mv Runner.app Payload
          zip -9 release-ios.ipa -r Payload
      - name: 重命名文件
        run:  mv build/ios/archive/Runner.xcarchive/Products/Applications/release-ios.ipa build/ios/archive/Runner.xcarchive/Products/Applications/{{ env.APP_NAME }}-ios-${{ env.version }}.ipa
      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: build/ios/archive/Runner.xcarchive/Products/Applications/{{ env.APP_NAME }}-ios-${{ env.version }}.ipa

  job_release:
    needs: [ job_v,job_apk,job_ipa ]
    name: 发布版本
    runs-on: ubuntu-latest
    env:
      version: ${{ inputs.version }}
    steps:
      - name: 下载产物
        id: download
        uses: actions/download-artifact@v4
        with:
          path: ./
      - name: 读入环境信息
        run: |
          echo ${{ format('version {0}', env.version ) }}
          echo ${{steps.download.outputs.download-path}}
          ls -R
      - name: 发布文件
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          allowUpdates: true
          draft: true
          # prerelease: true
          tag: v${{ env.version }}
          artifacts: "android-split/*,android-all/*,ios/*"